download_url: https://datastax-cluster-config-prod.s3.us-east-2.amazonaws.com/cc6478dd-2d0e-4576-87f1-fa3cbd3e10bb-1/secure-connect-testphotographyaws.zip?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA2AIQRQ76S2JCB77W%2F20230925%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Date=20230925T231831Z&X-Amz-Expires=300&X-Amz-SignedHeaders=host&X-Amz-Signature=cfcddf9d6b22397952825315a3e8646c02026dee10d97600fe85b45dbbbcd16c
provider: ec2
zone: us-west-2
instance: m5.24xlarge
token: token
workload_duration: 50m
keyspace: photography
workload_file: https://github.com/Yuqi-Du/storageYuqiDu/raw/main/vector-crud-test-nosqlbench.yaml
dataset: https://github.com/Yuqi-Du/storageYuqiDu/raw/main/vector-dataset.txt
client_count: 1
docs_count: 1000
op_cycles: 1000
op_rate: 25
op_connections: 3
ops:
  - op: find-one-by-vector-projection
  - op: find-one-update-vector
  - op: delete-document

#Yuqi Du
---

ensemble:
  server:
    node.count: 1
    provisioner:
      name: existing_astra
      properties:
        bundle_download_url: {{download_url}}
        keyspace: {{keyspace}}
        username: token
        password: <<secret:{{token}}>>
        token: <<secret:{{token}}>>

  client:
    node.count: {{client_count}}
    provisioner:
      name: ctool
      properties:
        cloud.provider: {{provider}}
        cloud.region: {{zone}}
        cloud.instance.type: {{instance}}
    configuration_manager:
      - name: nosqlbench_ssh
        properties:
          version: 5.17.3-release

workload:
  phases:
    # set schema phase, ensures collection table is created from scratch (delete,create)
    - schema-collection:
        module: nosqlbench
        properties:
          client.size: 1
          alias: schema-collection
          service_type: stargate
          args:
            - driver=http
            - yaml={{workload_file}}
            - tags=block:schema-collection
            - namespace={{keyspace}}
            - protocol=https
            - jsonapi_port=443
            - path_prefix=/api/json
            - threads=1
            - errors=stop

    # prepare phase that inserts desired amount of documents
    # executed only on a single client, stopped on errors
    - write:
        module: nosqlbench
        properties:
          alias: write
          service_type: stargate
          cycles: {{docs_count}}
          args:
            - driver=http
            - workload={{workload_file}}
            - tags=block:write
            - dataset={{dataset}}
            - namespace={{keyspace}}
            - protocol=https
            - jsonapi_port=443
            - path_prefix=/api/json
            - docscount={{docs_count}}
            - threads=100
            - connections=100
            - errors=stop

    -
      {{#ops}}
      main_{{op}}:
        module: nosqlbench
        properties:
          alias: main_{{op}}
          service_type: stargate
          cycles: {{op_cycles}}
          args:
            - driver=http
            - workload={{workload_file}}
            - tags=block:main,name:.*{{op}}
            - errors=histogram
            - namespace={{keyspace}}
            - protocol=https
            - jsonapi_port=443
            - path_prefix=/api/json
            - threads=1x
            - connections={{op_connections}}
            - docscount={{docs_count}}
            - rate={{op_rate}}
        {{/ops}}



  checkers:
    verify_success:
      checker: nofail
  artifact_checkers:
    generate_chart:
      artifact_checker: hdrtool